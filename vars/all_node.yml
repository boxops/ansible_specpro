---
# Define all variables for nodes

# --------------------[ Define initial configuration vars here ]--------------------

node_hostname: SpecHomeNode

time_zone: Europe/London

# /etc/hosts vars
hosts_file:
  - { name1: "{{ node_hostname }}.local",
      name2: "{{ node_hostname }}",
      ip: 127.0.1.1 }
  - { name1: localhost,
      name2: "",
      ip: 127.0.1.1 }

# Network interface vars
network_config:
  # Dynamic config
  - { conn_name: ubuntu-dhcp,
      ifname: eth0,
      type: ethernet,
      state: present,
      autoconnect: true }
  # # Static config
  # - { conn_name: ubuntu-static,
  #     ifname: eth1,
  #     type: ethernet,
  #     state: present,
  #     autoconnect: true,
  #     ip4: "192.168.1.1/24",
  #     gw4: "192.168.1.254" }

sudo_users:
  - maciej
  - balazs
  - spec

system_users:
  - prometheus
  - grafana
  - influxdb
  - telegraf

local_package_bundle_directory: "~/vagrant/code"

systemd_service_directory: /etc/systemd/system

# Configure /etc/ssh/sshd_config
ssh_password_authentication: "yes"
ssh_permit_root_login: "no"
ssh_port: 22  # change default port to enhance security

bashrc_block: |
  alias chk="python3 /usr/local/bin/checksrv.py"
  unset HISTFILESIZE
  #HISTFILESIZE=2000
  HISTSIZE=4000
  PROMPT_COMMAND="history -a"
  export HISTSIZE PROMPT_COMMAND
  shopt -s histappend

# !!! TODO - Change the subdomain to home.fypbcu.co.uk
# ---[ subdomain.redirect setup vars ]---
nginx_domain_name: darley.fypbcu.co.uk
nginx_web_listen_port: 80
nginx_proxy_pass_port: 9010
nginx_proxy_pass_address: localhost
nginx_domain_server_block: |
  server {
    listen {{ nginx_web_listen_port }};

    listen [::]:{{ nginx_web_listen_port }};

    root /var/www/{{ nginx_domain_name }}/html;
    index index.html index.htm index.nginx-debian.html;

    server_name {{ nginx_domain_name }} www.{{ nginx_domain_name }};

    location / {
      proxy_pass http://{{ nginx_proxy_pass_address }}:{{ nginx_proxy_pass_port }};
    }
  }

# --------------------[ Define openvpn-client vars here ]--------------------

openvpn_server_hostname: fypbcu.co.uk
openvpn_binary_directory: /etc/systemd/system
openvpn_config_directory: /etc/openvpn
openvpn_ovpn_directory: /home/administrator
openvpn_fetch_config_directory: /tmp

# Openvpn vars for generating client.ovpn
openvpn_remote: 51.89.149.10
openvpn_port: 9015
openvpn_rsa_bits: 2048
openvpn_auth_alg: SHA256
openvpn_cipher: AES-128-GCM
openvpn_use_modern_tls: true
openvpn_proto: udp
openvpn_resolv_retry: infinite
openvpn_remote_cert_tls: server
# change x509 name after reinstalling openvpn
openvpn_verify_x509_name: server_p8nlMyr8HnyFOMpk
openvpn_tls_cipher: TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256
openvpn_ignore_unknown_option: block-outside-dns

# Generate a new ovpn file for the client
openvpn_client: "{{ node_hostname }}"
openvpn_client_pass_auth: true
# pass is only used when openvpn_client_pass_auth is true
openvpn_client_pass: vpnpass

# Revoke ovpn file and all cert for the client
# Ensure to assign an empty list if there are no clients to revoke
openvpn_revoke_cert: [] # - "{{ node_hostname }}"

# --------------------[ Define prometheus vars here ]--------------------

prometheus_binary_dir: /usr/local/bin
prometheus_config_dir: /usr/local/etc/prometheus
prometheus_db_dir: /var/lib/prometheus

prometheus_web_listen_address: ":9020"
prometheus_web_external_url: ''

prometheus_storage_retention: "30d"

prometheus_global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s

prometheus_scrape_configs:

  - job_name: prometheus
    static_configs:
    - targets:
      - 10.8.0.2:9020
      - 192.168.0.50:9020

  - job_name: node
    scrape_interval: 10s
    scrape_timeout: 10s
    static_configs:
      - targets: ['192.168.0.50:9011']
      - targets: ['localhost:9011']

  - job_name: Cisco
    scrape_interval: 30s
    scrape_timeout: 30s
    static_configs:
      - targets:
        - 192.168.0.239  # SNMP Router Cisco.
        - 192.168.0.77  # SNMP Access Point Cisco.
    metrics_path: /snmp
    params:
      module: [Cisco]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: 10.8.0.2:9030  # The SNMP exporter's real hostname:port.

  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
      - targets:
        - http://prometheus.io    # Target to probe with http.
        - https://prometheus.io   # Target to probe with https.
        - http://fypbcu.co.uk:8080 # Target to probe with http on port 8080.
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9092  # The blackbox exporter's real hostname:port.

  - job_name: 'blackbox-targets'
    metrics_path: /probe
    params:
      module:
        - dns_google
    static_configs:
      - targets:
         - "8.8.8.8"
         - "1.1.1.1"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9092  # The blackbox exporter's real hostname:port.

  - job_name: 'http_ipv4'
    metrics_path: /probe
    params:
      module:
         - http_2xx_ipv4
    static_configs:
      - targets:
        - http://fypbcu.co.uk # Target to probe with http on port 8080.
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9092  # The blackbox exporter's real hostname:port.

  - job_name: 'ICMP'
    metrics_path: /probe
    params:
      module:
         - icmp
    static_configs:
      - targets:
        - 54.36.163.113
        - 82.153.171.48
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9092  # The blackbox exporter's real hostname:port.

# --------------------[ Define prometheus snmp-exporter vars here ]--------------------

snmp_exporter_version: 0.18.0
snmp_exporter_binary_directory: /usr/local/bin
snmp_exporter_configuration_directory: /usr/local/etc/prometheus
snmp_exporter_web_listen_address: ":9030"
snmp_exporter_log_level: info

# If this is empty, role will download snmp.yml file from https://github.com/prometheus/snmp_exporter.
# Point to a file generated by '../tasks/snmp-exporter-config-generator.yml'
snmp_exporter_config_file: ""

# this variable is used for creating generator.yml file
snmp_exporter_generator_content:
  Cisco:
    version: 3
    auth:
      community: public
      username: AdminAtSpectrum
      password: Spectrum1911
      auth_protocol: SHA
      priv_protocol: AES
      security_level: authPriv
      priv_password: Spectrum1900
    walk:
      - 1.3.6.1.2.1.1 # sysInfo
      - 1.3.6.1.2.1.2.2 # ifTable
      - 1.3.6.1.2.1.31.1.1 # ifXTable
      - 1.3.6.1.2.1.14 # ospf
      - 1.3.6.1.2.1.1.1 # sysDescr
      - 1.3.6.1.4.1.9.9.109.1.1.1.1 # CPU
  Draytek:
    version: 3
    auth:
      username: AdminAtsSpectrum
      password: Spectrum1911
      auth_protocol: SHA
      priv_protocol: AES
      security_level: authPriv
      priv_password: Spectrum1900
    walk:
      - 1.3.6.1.2.1.1 # sysInfo
      - 1.3.6.1.2.1.2 # ifTable
      # - 1.3.6.1.2.1.4 # IP - not working -- causes issues --
      - 1.3.6.1.2.1.5 # ICMP
      - 1.3.6.1.2.1.6 # TCP
      - 1.3.6.1.2.1.7 # UDP
      - 1.3.6.1.2.1.11 # SNMP
      - 1.3.6.1.2.1.10.94.1.1 # ADSL/VDSL

snmp_exporter_download_mibs:
  - { dest: cisco_mibs, url: ftp://ftp.cisco.com/pub/mibs/v2/v2.tar.gz }
  # - { dest: fs_mibs, url: https://www.fs.com/products/90130.html }
  # - { dest: draytek_mibs, url: https://www.draytek.com/support/knowledge-base/5517 }

# --------------------[ Define prometheus node-exporter vars here ]--------------------

node_exporter_web_listen_address: ":9011"
node_exporter_web_telemetry_path: "/metrics"
node_exporter_binary_directroy: /usr/local/bin
node_exporter_config_directory: "/usr/local/etc/prometheus"
node_exporter_service_file_directory: "/lib/systemd/system"
node_exporter_textfile_dir: "/tmp/txtfileexp/"

# --------------------[ Define prometheus blackbox-exporter vars here ]--------------------

blackbox_exporter_web_listen_address: ":9092" #
blackbox_exporter_binary_directory: "/usr/local/bin" #
blackbox_exporter_service_file_directory: "/lib/systemd/system" #
blackbox_exporter_config_directory: "/usr/local/etc/prometheus/blackbox" #

blackbox_exporter_configuration_modules:
  http_2xx_ipv4:
    prober: http
    http:
      preferred_ip_protocol: ip4
  http_2xx:
    prober: http
  http_post_2xx:
    prober: http
    http:
      method: POST
  tcp_connect:
    prober: tcp
  pop3s_banner:
    prober: tcp
    tcp:
      query_response:
      - expect: "^+OK"
      tls: true
      tls_config:
        insecure_skip_verify: false
  ssh_banner:
    prober: tcp
    tcp:
      query_response:
      - expect: "^SSH-2.0-"
  irc_banner:
    prober: tcp
    tcp:
      query_response:
      - send: "NICK prober"
      - send: "USER prober prober prober :prober"
      - expect: "PING :([^ ]+)"
        send: "PONG ${1}"
      - expect: "^:[^ ]+ 001"
  icmp:
    prober: icmp
  dns_google:
    prober: dns
    dns:
      transport_protocol: tcp
      query_name: "www.google.com"

# --------------------[ Define grafana vars here ]--------------------

grafana_service_file_directory: /lib/systemd/system
grafana_config_directory: /usr/local/etc/grafana
grafana_binary_directory: /usr/local/bin
grafana_pid_file_directory: /var/run/grafana

grafana_ini:
  - { section: users, option: allow_sign_up, value: "false" }
  - { section: auth.anonymous, option: enabled, value: "false" }
  - { section: server, option: http_port, value: 9010 }
  - { section: server, option: domain, value: darley.fypbcu.co.uk }
  - { section: server, option: root_url, value: http://darley.fypbcu.co.uk }
  - { section: smtp, option: enabled, value: "true" }
  - { section: smtp, option: host, value: ss10.ovh.net:456 }
  - { section: smtp, option: user, value: admin@fypbcu.co.uk }
  - { section: smtp, option: password, value: Spectrum1000 }
  - { section: smtp, option: skip_verify, value: "true" }
  - { section: smtp, option: from_address, value: admin@fypbcu.co.uk }
  - { section: smtp, option: from_name, value: FYP}
  - { section: smtp, option: ehlo_identity, value: admin@fypbcu.co.uk }
  - { section: emails, option: welcome_email_on_sign_up, value: "false" }
  - { section: emails, option: templates_pattern, value: emails/*.html }

# --------------------[ Define influxdb vars here ]--------------------

influxdb_var_directory: /var/lib/influxdb
influxdb_config_directory: /usr/local/etc/influxdb
influxdb_systemd_directory: /etc/systemd/system
influxdb_bin_directory: /usr/local/bin

# --------------------[ Define telegraf vars here ]--------------------

telegraf_systemd_directory: /etc/systemd/system
telegraf_config_directory: /usr/local/etc/telegraf
telegraf_bin_directory: /usr/local/bin
