---
# Define prometheus tasks here

- name: create prometheus system group
  group:
    name: prometheus
    system: true
    state: present

- name: create prometheus system user
  user:
    name: prometheus
    system: true
    shell: "/usr/sbin/nologin"
    group: prometheus
    createhome: false
    home: "{{ prometheus_db_dir }}"

- name: create systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: prometheus
    group: prometheus
    mode: 0644
  notify:
    - restart prometheus

- name: Add execute permissions to prometheus binaries
  file:
    path: "{{ prometheus_binary_install_dir }}/{{ item }}"
    mode: a+x
  with_items:
    - 'promtool'
    - 'prometheus'

- name: configure prometheus.yml
  become: true
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: prometheus
    group: prometheus
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check config %s"

# - name: configure prometheus static targets
#   copy:
#     content: |
#       #jinja2: lstrip_blocks: True
#       {{ item.value | to_nice_yaml(indent=2) }}
#     dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
#     force: true
#     owner: prometheus
#     group: prometheus
#     mode: 0640
#   with_dict: "{{ prometheus_targets }}"
#   when: prometheus_targets != {}

# - name: copy prometheus custom static targets
#   copy:
#     src: "{{ item }}"
#     dest: "{{ prometheus_config_dir }}/file_sd/"
#     force: true
#     owner: prometheus
#     group: prometheus
#     mode: 0640
#   with_fileglob: "{{ prometheus_static_targets_files }}"

- name: ensure prometheus service is started and enabled
  become: true
  systemd:
    daemon_reload: true
    name: prometheus
    state: started
    enabled: true

# - name: Install SELinux dependencies
#   package:
#     name: "{{ item }}"
#     state: present
#   with_items: "{{ prometheus_selinux_packages }}"
#   register: _install_packages
#   until: _install_packages is succeeded
#   retries: 5
#   delay: 2
#   when:
#     - ansible_version.full is version('2.4', '>=')
#     - ansible_selinux.status == "enabled"

# - name: Allow prometheus to bind to port in SELinux
#   seport:
#     ports: "{{ prometheus_web_listen_address.split(':')[1] }}"
#     proto: tcp
#     setype: http_port_t
#     state: present
#   when:
#     - ansible_version.full is version('2.4', '>=')
#     - ansible_selinux.status == "enabled"
